% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reproject_to_polar.R
\name{reproject_to_polar}
\alias{reproject_to_polar}
\alias{reproject_to_polar,RasterLayer-method}
\alias{reproject_to_polar,RasterStackBrick-method}
\title{Reproject to polar}
\usage{
reproject_to_polar(r, z, a, radius = 745)

\S4method{reproject_to_polar}{RasterLayer}(r, z, a, radius = 745)

\S4method{reproject_to_polar}{RasterStackBrick}(r, z, a, radius = 745)
}
\arguments{
\item{r}{\linkS4class{RasterLayer}. A normalized greyscale image. Typically,
the blue channel extracted from an hemispherical photographs. Please see
\code{\link{read_caim}} and \code{\link{normalize}}.}

\item{z}{\linkS4class{RasterLayer}. The result of a call to
\code{\link{zenith_image}}.}

\item{a}{\linkS4class{RasterLayer}. The result of a call to
\code{\link{azimuth_image}}.}

\item{radius}{Numeric integer of length one. Radius of the reprojected
hemispherical image.}
}
\description{
Reproject to polar
}
\examples{
\dontrun{
path <- system.file("external/b4_2_5724.jpg", package = "rcaiman")
caim <- read_caim(path, c(1280, 960) - 745, 745 * 2, 745 * 2)
caim <- normalize(caim, 0, 255)
z <- zenith_image(ncol(caim), lens("Nikon_FCE9"))
a <- azimuth_image(z)
bin <- apply_thr(caim$Blue, 0.5)
bin_polar <- reproject_to_polar(bin, z, a, radius = 400)
bin_polar <- apply_thr(bin_polar, 0.5)
write_bin(bin_polar, "bin") #ready for CIMES, GLA, CAN-EYE, etc.
}
}
