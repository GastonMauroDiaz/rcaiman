% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_fuzzy_thresholding.R
\name{local_fuzzy_thresholding}
\alias{local_fuzzy_thresholding}
\title{local fuzzy thresholding}
\usage{
local_fuzzy_thresholding(lightness, m, mem, thr = NULL, fuzziness = NULL)
}
\arguments{
\item{lightness}{\linkS4class{RasterLayer}. A normalized greyscale image, the
lightness value. Values should range between zero and one --please see
\code{\link{normalize}}.}

\item{m}{\linkS4class{RasterLayer}. A mask. Usually, the result of a call to
\code{\link{mask_hs}}.}

\item{mem}{\linkS4class{RasterLayer}. It is the scale parameter of the
logistic membership function. Typically it is obtained with
\code{\link{membership_to_color}}.}

\item{thr}{Numeric vector of length one. Location parameter of the logistic
membership function. Use \code{NULL} (default) to order to estimate it
automatically with the function \code{\link[autothresholdr]{auto_thresh}},
method \code{"IsoData"}.}

\item{fuzziness}{Numeric vector of length one. This number is a constant that
scale \code{mem}. Use \code{NULL} (default) to order to estimate it
automatically as the midpoint between the maximum and minimum values of
\code{lightness}.}
}
\description{
This function is presented in \insertCite{Diaz2015;textual}{rcaiman}. It uses
a threshold value as the location parameter of a logistic membership function
whose scale parameter depends on a variable, here named \code{mem}. This
dependence can be explained as follows: if the variable is equal to \code{1},
then the membership function is as a threshold function because the scale
parameter is \code{0}; lowering the variable increases the scale parameter,
thus blurring the threshold because it decreases the steepness of the curve.
Since the variable is defined pixel by pixel, this should be considered as a
\strong{local} fuzzy thresholding method.
}
\details{
Argument \code{m} can be used to affect the estimation of \code{thr}
  and \code{fuzziness}.
}
\examples{
\dontrun{
caim <- read_caim()
caim <- normalize(caim, 0, 255)
z <- zenith_image(ncol(caim), lens("Nikon_FCE9"))
target_color <- colorspace::sRGB(matrix(c(0.529, 0.808, 0.921), ncol = 3))
mem <- membership_to_color(caim, target_color)
m <- !is.na(z)
mem_thr <- local_fuzzy_thresholding(mean(caim), m,  mem$membership_to_grey)
plot(mem_thr)
}
}
\references{
\insertRef{Diaz2015}{rcaiman}
}
\seealso{
Other Fuzzy logic functions: 
\code{\link{enhance_caim}()},
\code{\link{membership_to_color}()}
}
\concept{Fuzzy logic functions}
