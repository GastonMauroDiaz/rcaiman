% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_sky_points.R
\name{extract_sky_points}
\alias{extract_sky_points}
\title{Extract sky points}
\usage{
extract_sky_points(r, bin, g, dist_to_black = 3)
}
\arguments{
\item{r}{\linkS4class{SpatRaster}. The image from which the argument \code{sky_points}
was obtained.}

\item{bin}{\linkS4class{SpatRaster}. This should be a preliminary binarization of
\code{r} useful for masking pixels that are very likely pure sky pixels.}

\item{g}{\linkS4class{SpatRaster} built with \code{\link[=sky_grid_segmentation]{sky_grid_segmentation()}} or
\code{\link[=chessboard]{chessboard()}}.}

\item{dist_to_black}{Numeric vector of length one or \code{NULL}. A minimum
distance to a black pixel can be set as a constraint. Useful to avoid mixed
pixels since they are close to the silhouette contour.}
}
\value{
An object of the class \emph{data.frame} with two columns named
\emph{row} and \emph{col}.
}
\description{
Extract sky points for model fitting
}
\details{
This function will automatically sample sky pixels from the sky regions
delimited by \code{bin}. The density and distribution of the sampling points is
controlled by the arguments \code{g} and \code{dist_to_black}.

As the first step, sky pixels from \code{r} are evaluated to find the pixel with
maximum digital value per cell of the \code{g} argument. The \code{dist_to_black}
argument allows users to establish a buffer zone for \code{bin}, meaning a size
reduction of the original sky regions.
}
\examples{
\dontrun{
caim <- read_caim()
z <- zenith_image(ncol(caim), lens())
a <- azimuth_image(z)
m <- !is.na(z)
r <- caim$Blue

com <- compute_complementary_gradients(caim)
chroma <- max(com$blue_yellow, com$cyan_red)
bin <- apply_thr(chroma, thr_isodata(chroma[!is.na(chroma)]))
bin <- bin & apply_thr(com$blue_yellow, -0.2)

g <- sky_grid_segmentation(z, a, 10)
sky_points <- extract_sky_points(r, bin, g,
                                 dist_to_black = 3)
plot(bin)
points(sky_points$col, nrow(caim) - sky_points$row, col = 2, pch = 10)
}
}
\seealso{
\code{\link[=fit_cie_sky_model]{fit_cie_sky_model()}}
}
