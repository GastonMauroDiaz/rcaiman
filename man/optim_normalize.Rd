% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optim_normalize.R
\name{optim_normalize}
\alias{optim_normalize}
\title{Optimize normalize parameters}
\usage{
optim_normalize(caim, m, mn = NULL, mx = NULL, method = "BFGS")
}
\arguments{
\item{caim}{\linkS4class{SpatRaster}. The return of a call to
\code{\link[=read_caim]{read_caim()}}.}

\item{m}{\linkS4class{SpatRaster}. A mask. For hemispherical photographs, check
\code{\link[=mask_hs]{mask_hs()}}. Default (\code{NULL}) is the equivalent to enter
\code{!is.na(caim$Red)}. See the Details section in \code{\link[=local_fuzzy_thresholding]{local_fuzzy_thresholding()}}
to understand how this argument can modify the output.}

\item{mn}{Numeric vector of length one. Minimum expected value. Default is
equivalent to enter the minimum value from \code{r}.}

\item{mx}{Numeric vector of length one. Maximum expected value. Default is
equivalent to enter the maximum value from \code{r}.}

\item{method}{Optimization method to use. See \code{\link{optim}}.}
}
\value{
Numeric vector of length two.
}
\description{
Wrapper function for \code{\link[bbmle:mle2]{bbmle::mle2()}}. Optimize normalize parameters by
maximizing \code{\link[=colorfulness]{colorfulness()}} and minimizing saturation.
}
\examples{
\dontrun{
caim <- read_caim()
m <- !is.na(z)
mn_mx <- optim_normalize(caim, m)
ncaim <- normalize(caim, mn_mx[1], mn_mx[2], TRUE)
plotRGB(ncaim*255)
plotRGB(normalize(caim)*255)
}
}
\seealso{
Other Tool Functions: 
\code{\link{colorfulness}()},
\code{\link{correct_vignetting}()},
\code{\link{defuzzify}()},
\code{\link{extract_dn}()},
\code{\link{extract_feature}()},
\code{\link{extract_rl}()},
\code{\link{extract_sky_points_simple}()},
\code{\link{extract_sky_points}()},
\code{\link{masking}()},
\code{\link{read_bin}()},
\code{\link{read_caim_raw}()},
\code{\link{read_caim}()},
\code{\link{write_bin}()},
\code{\link{write_caim}()}
}
\concept{Tool Functions}
