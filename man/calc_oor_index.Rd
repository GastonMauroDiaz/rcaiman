% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_oor_index.R
\name{calc_oor_index}
\alias{calc_oor_index}
\title{Calc out-of-range index}
\usage{
calc_oor_index(r, sky)
}
\arguments{
\item{r}{\linkS4class{SpatRaster}. The blue channel of a canopy photograph.}

\item{sky}{\linkS4class{SpatRaster}. The blue radiance of the unobscured sky}
}
\value{
Numeric vector of length one.
}
\description{
The \strong{out-out-of-range} (OOR) index is calculated as foollow:
}
\details{
\eqn{\sum_{i = 1}^{N}(r_i/sky_i)^2},

where \eqn{r} is a canopy image with radiance data, \eqn{sky} is an
image with unobstructed sky radiance data, \eqn{i} is the index that
represents the position of a given pixel on the raster grid, and \eqn{N} is
the total number of pixels that satisfy: \eqn{r_i/sky_i<0} or
\eqn{r_i/sky_i>1}.
}
\examples{
\dontrun{
caim <- read_caim()
r <- caim$Blue
z <- zenith_image(ncol(caim), lens())
a <- azimuth_image(z)

path <- system.file("external/ootb_sky.txt", package = "rcaiman")
ootb_sky <- read_ootb_sky_model(gsub(".txt", "", path), z, a)

sky <- ootb_interpolate_and_merge(r, z, a, ootb_sky$sky_points, ootb_sky)

calc_oor_index(r, sky$sky)
}
}
\seealso{
Other Tool Functions: 
\code{\link{calc_spherical_distance}()},
\code{\link{colorfulness}()},
\code{\link{correct_vignetting}()},
\code{\link{defuzzify}()},
\code{\link{display_caim}()},
\code{\link{expand_sky_points}()},
\code{\link{extract_dn}()},
\code{\link{extract_feature}()},
\code{\link{extract_rel_radiance}()},
\code{\link{extract_sky_points}()},
\code{\link{extract_sun_coord}()},
\code{\link{masking}()},
\code{\link{optim_dist_to_black}()},
\code{\link{optim_normalize}()},
\code{\link{percentage_of_clipped_highlights}()},
\code{\link{read_bin}()},
\code{\link{read_caim}()},
\code{\link{read_caim_raw}()},
\code{\link{read_ootb_sky_model}()},
\code{\link{sor_filter}()},
\code{\link{vicinity_filter}()},
\code{\link{write_bin}()},
\code{\link{write_caim}()},
\code{\link{write_ootb_sky_model}()}
}
\concept{Tool Functions}
