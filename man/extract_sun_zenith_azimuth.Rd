% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_sun_zenith_azimuth.R
\name{extract_sun_zenith_azimuth}
\alias{extract_sun_zenith_azimuth}
\title{Extract sun angular coordinates}
\usage{
extract_sun_zenith_azimuth(
  r,
  z,
  a,
  bin,
  g,
  max_angular_dist = 30,
  method = "object-based"
)
}
\arguments{
\item{r}{\linkS4class{SpatRaster}. The image from which the argument \code{sky_points}
was obtained.}

\item{z}{\linkS4class{SpatRaster} built with \code{\link[=zenith_image]{zenith_image()}}.}

\item{a}{\linkS4class{SpatRaster} built with \code{\link[=azimuth_image]{azimuth_image()}}.}

\item{bin}{\linkS4class{SpatRaster}. This should be a preliminary binarization of
\code{r} useful for masking pixels that are very likely pure sky pixels.}

\item{g}{\linkS4class{SpatRaster} built with \code{\link[=sky_grid_segmentation]{sky_grid_segmentation()}} or
\code{\link[=chessboard]{chessboard()}}.}

\item{max_angular_dist}{Numeric vector of length one. Specifies the maximum
expected size of the circumsolar region in degrees.}

\item{method}{description}
}
\value{
Numeric vector of length two, where the first element is the
solar zenith angle and the second is the solar azimuth angle, both
expressed in degrees.
}
\description{
Extract the sun coordinates for CIE sky model fitting.
}
\details{
This function is part of the efforts to automate the method proposed by
\insertCite{Lang2010;textual}{rcaiman}. A paper for thoroughly presenting and
testing this pipeline is under preparation.
}
\examples{
\dontrun{
caim <- read_caim()
r <- caim$Blue
z <- zenith_image(ncol(caim), lens())
a <- azimuth_image(z)
m <- !is.na(z)
bin <- regional_thresholding(r, rings_segmentation(z, 30),
                             method = "thr_isodata")
mx <- optim_max(caim, bin)
caim <- normalize_minmax(caim, 0, mx, TRUE)
plotRGB(caim*255)
sky_blue <- polarLAB(50, 17, 293)
ecaim <- enhance_caim(caim, m, sky_blue = sky_blue)
bin <- apply_thr(ecaim, thr_isodata(ecaim[m]))
g <- sky_grid_segmentation(z, a, 10)
sun_zenith_azimuth <- extract_sun_zenith_azimuth(r, z, a, bin, g,
                                                 max_angular_dist = 30)
row_col <- row_col_from_zenith_azimuth(z, a,
                                       sun_zenith_azimuth[1],
                                       sun_zenith_azimuth[2])
points(row_col[1,2], nrow(caim) - row_col[1,1], col = 3, pch = 10)
}
}
