% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cie_sky_model.R
\name{fit_cie_sky_model}
\alias{fit_cie_sky_model}
\title{Fit CIE sky model}
\usage{
fit_cie_sky_model(
  r,
  z,
  a,
  sky_marks,
  sun_coord,
  st_sky_no = NULL,
  general_sky_type = NULL,
  use_kernel = FALSE,
  method = "BFGS"
)
}
\arguments{
\item{r}{\linkS4class{RasterLayer}. A normalized greyscale image. Typically,
the blue channel extracted from an hemispherical photographs. Please see
\code{\link{read_caim}} and \code{\link{normalize}}.}

\item{z}{\linkS4class{RasterLayer}. The result of a call to
\code{\link{zenith_image}}.}

\item{a}{\linkS4class{RasterLayer}. The result of a call to
\code{\link{azimuth_image}}.}

\item{sky_marks}{data.frame. The result of a call to
\code{\link{extract_sky_marks}}.}

\item{sun_coord}{Numeric vector of length 2. Zenith and azimuth angles in
degrees, corresponding to the location of the solar disk center.}

\item{st_sky_no}{Numeric vector. Standard sky number from Table 1 from
\insertCite{Li2016;textual}{rcaiman}.}

\item{general_sky_type}{Character vector of length one. "Overcast", "Clear",
or "Partly cloudy". See Table 1 from \insertCite{Li2016;textual}{rcaiman}.}

\item{use_kernel}{Logical vector of length one. If true, a 3 by 3 kernel will
be used to extract the sky digital number from \code{r}.}

\item{method}{Optimization method to use. See \code{\link{optim}}.}
}
\description{
Fit CIE sky model using data from real hemispherical photographs.
}
\details{
This function use maximum likelihood to estimate the parameters of the CIE
sky model that fit best to data sampled from a real photo. It will try to
estimate the parameters  The result include the output produced by
\code{\link[bbmle]{mle2}}, the root mean square error, the adjusted r
squared, the digital number at the zenith, the sun coordinates (zenith and
azimuth angle in degrees), and the description of the standard sky from which
the initial parameters were drawn \insertCite{Li2016}{rcaiman}.
}
\examples{
\dontrun{
my_file <- path.expand("~/DSCN5548.JPG")
download.file("https://osf.io/kp7rx/download", my_file,
             method = "auto", mode = "wb")
r <- read_caim(my_file,
               c(1280, 960) - 745,
               745 * 2,
               745 * 2)
z <- zenith_image(ncol(r), lens("Nikon_FCE9"))
a <- azimuth_image(z)
g <- sky_grid_segmentation(z, a, 10)
blue <- gbc(r$Blue)
bin <- mblt(blue, z, a, w = 0.5)
sky_marks <- extract_sky_marks(blue, bin, g,
                               min_raster_dist = 10)
sun_coord <- extract_sun_mark(blue, bin, z, a, g)

sun_coords <- data.frame(z = c(sun_coord[1], seq(100, 150, 5) ),
a = sun_coord[2])
models <- Map(function(i) fit_cie_sky_model(r$Blue, z, a, sky_marks,
                                            as.numeric(sun_coords[i,]),
                                            general_sky_type = "Clear"),
              1:nrow(sun_coords))
rmse <- Map(function(i) models[[i]]$rmse, seq_along(models)) \%>\% unlist()
model <- models[[which.min(rmse)]]
sky <- cie_sky_model_raster(z, a, model$sun_coord, model$fit@coef[-6])*
       model$zenith_dn
plot(sky)
}
}
\references{
\insertRef{Li2016}{rcaiman}
}
\seealso{
Other cie sky model functions:
\code{\link{.cie_sky_model}()},
\code{\link{cie_sky_model_raster}()}
}
\concept{cie sky model functions}
