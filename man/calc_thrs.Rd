% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_thrs.R
\name{calc_thrs}
\alias{calc_thrs}
\title{Title}
\usage{
calc_thrs(r, z, a, m, angle_width = 6, fov = 30, method = "thr_twocorner_uc")
}
\arguments{
\item{r}{\linkS4class{SpatRaster}. A greyscale image.}

\item{z}{\linkS4class{SpatRaster} built with \code{\link[=zenith_image]{zenith_image()}}.}

\item{a}{\linkS4class{SpatRaster} built with \code{\link[=azimuth_image]{azimuth_image()}}.}

\item{m}{\linkS4class{SpatRaster}. A mask. For hemispherical photographs,
check \code{\link[=select_sky_vault_region]{select_sky_vault_region()}}.}

\item{angle_width}{Numeric vector of length one. It should be \verb{30, 15, 10, 7.5, 6, 5, 3.75, 3, 2.5, 1.875, 1} or \code{0.5} degrees. This constrain is
rooted in the requirement of a value able to divide both the \code{0} to \code{360}
and \code{0} to \code{90} ranges into a whole number of segments.}

\item{method}{Character vector of length one.}
}
\value{
data.frame
}
\description{
Title
}
\examples{
\dontrun{
caim <- read_caim()
z <- zenith_image(ncol(caim), lens())
a <- azimuth_image(z)
m <- !is.na(z)
r <- caim$Blue

thrs <- calc_thrs(r, z, a,  m,
                  angle_width = 30,
                  fov = 60,
                  method = "thr_isodata")

thrs_f <- filter_thrs(thrs, r, z, a, 2.5, TRUE, n_min = 3)
thr <- interpolate_planar(thrs_f$rr$sky_points, r,
                          rmax = ncol(r)/7, col_id = "dn")
plot(thr)
plot(apply_thr(r, thr))
}
}
