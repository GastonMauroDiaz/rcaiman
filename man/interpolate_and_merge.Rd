% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolate_and_merge.R
\name{interpolate_and_merge}
\alias{interpolate_and_merge}
\title{Interpolate sky data into a raster and merge it with a sky model raster}
\usage{
interpolate_and_merge(r, z, a, sky_points, ootb_sky, rmax_tune = 1)
}
\arguments{
\item{r}{\linkS4class{SpatRaster}. Typically, the blue channel extracted from a
canopy photograph. The image from which \code{sky_points} was obtained.}

\item{z}{\linkS4class{SpatRaster} built with \code{\link[=zenith_image]{zenith_image()}}.}

\item{a}{\linkS4class{SpatRaster} built with \code{\link[=azimuth_image]{azimuth_image()}}.}

\item{sky_points}{The output of \code{\link[=extract_sky_points]{extract_sky_points()}}
or an object of the same class and structure.}

\item{ootb_sky}{An object of the class \code{list} that is the result of calling
\code{\link[=ootb_fit_cie_sky_model]{ootb_fit_cie_sky_model()}}.}

\item{rmax_tune}{Numeric vector of length one. It must be a positive integer.
It is used to fine tune the \code{rmax} argument that is computed internally
(see Details).}
}
\value{
An object of class \linkS4class{SpatRaster}.
}
\description{
This function is part of the efforts to automate the method proposed by
\insertCite{Lang2010;textual}{rcaiman}. A paper for thoroughly presenting and
testing this pipeline is under preparation.
}
\examples{
\dontrun{
caim <- read_caim()
r <- caim$Blue
z <- zenith_image(ncol(caim), lens())
a <- azimuth_image(z)

path <- system.file("external/ootb_sky.txt", package = "rcaiman")
ootb_sky <- read_ootb_sky_model(gsub(".txt", "", path))

sky <- interpolate_and_merge(r, z, a, ootb_sky$sky_points,
                             ootb_sky)
plot(sky$sky)

# See fit_cie_sky_model() for details on below file
path <- system.file("external/sky_points.gpkg",
                    package = "rcaiman")
sky_points <- terra::vect(path)
sky_points <- terra::extract(caim, sky_points, cells = TRUE)
sky_points <- terra::rowColFromCell(caim, sky_points$cell) \%>\% as.data.frame()
colnames(sky_points) <- c("row", "col")
head(sky_points)
plot(caim$Blue)
points(sky_points$col, nrow(caim) - sky_points$row, col = 2, pch = 10)

sky_points <- rbind(sky_points, ootb_sky$sky_points[, c("row", "col")])

sky <- interpolate_and_merge(r, z, a, ootb_sky$sky_points,
                             ootb_sky)
plot(sky$sky)
}
}
\references{
\insertAllCited{}
}
\seealso{
Other Sky Reconstruction Functions: 
\code{\link{cie_sky_image}()},
\code{\link{fit_cie_sky_model}()},
\code{\link{fit_coneshaped_model}()},
\code{\link{fit_trend_surface}()},
\code{\link{interpolate_sky_points}()},
\code{\link{ootb_fit_cie_sky_model}()}
}
\concept{Sky Reconstruction Functions}
