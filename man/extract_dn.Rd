% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_dn.R
\name{extract_dn}
\alias{extract_dn}
\title{Extract digital numbers}
\usage{
extract_dn(r, sky_points, use_window = TRUE)
}
\arguments{
\item{r}{\linkS4class{SpatRaster}.}

\item{sky_points}{An object of class \emph{data.frame}. The result of a call
to \code{\link{extract_sky_points}}.}

\item{use_window}{Logical vector of length one. If \code{TRUE}, a \eqn{3
\times 3} window will be used to extract the sky digital number from
\code{r}.}
}
\value{
An object of the class \emph{data.frame} which is the argument
  \code{sky_points} with an added column for each layer from \code{r}. Layer names are
  used to name the new columns.
}
\description{
It is a wrapper function around \code{\link[terra]{extract}}.
}
\examples{
caim <- read_caim()
r <- gbc(caim$Blue)
bin <- apply_thr(r, thr_isodata(r[]))
z <- zenith_image(ncol(caim), lens("Nikon_FCE9"))
a <- azimuth_image(z)
g <- sky_grid_segmentation(z, a, 10)
sky_points <- extract_sky_points(r, bin, g)
extract_dn(caim, sky_points)

# ImageJ can be used to digitize points.
# See calc_zenith_raster_coord() for details.
path <- system.file("external/b4_2_5724.jpg", package = "rcaiman")
caim <- read_caim(path)
plot(caim)
path <- system.file("external/points_over_perimeter.csv",
                     package = "rcaiman")
sky_points <- read.csv(path)
sky_points <- sky_points[,c(ncol(sky_points)-1, ncol(sky_points))]
colnames(sky_points) <- c("col", "row")
head(sky_points)
v <- cellFromRowCol(caim, sky_points$row, sky_points$col) \%>\%
  xyFromCell(caim, .) \%>\% vect()
plot(v, add = TRUE, col = 2)
extract_dn(caim, sky_points)
}
