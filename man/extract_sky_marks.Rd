% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_sky_marks.R
\name{extract_sky_marks}
\alias{extract_sky_marks}
\title{Extract sky marks}
\usage{
extract_sky_marks(r, bin, g, dist_to_plant = 3, min_raster_dist = 3)
}
\arguments{
\item{r}{\linkS4class{SpatRaster}. Greyscale image hemispherical image.}

\item{bin}{\linkS4class{SpatRaster}. The result of binarizing the \code{r}
argument.}

\item{g}{\linkS4class{SpatRaster}. The result of a call to
\code{\link{sky_grid_segmentation}} taking into account the camera, lens,
and pre-processing involved in obtaining the \code{r} argument.}

\item{dist_to_plant}{Numeric vector of length one or \code{NULL}.}

\item{min_raster_dist}{Numeric vector of length one or \code{NULL}. Distance
in pixels.}
}
\description{
Extract sky marks for CIE sky model fitting
}
\details{
The \code{bin} argument should be any binarized image that masked out pure
canopy (non-gap) pixels and most of the mixed pixels, so to establish a
region of interest dominated by pure sky pixels (a.k.a., gap pixels). The
\code{bin} argument can be obtained with the \code{\link{ootb_mblt}}.

This function will automatically sample in the sky region delimited by
\code{bin}. The density and distribution of the sampling points is controlled
by the arguments \code{g}, \code{dist_to_plant}, and \code{min_raster_dist}.

As first step, the digital number under the class *Gap* --digital numbers
from \code{r} covered by pixels values equal to one on the \code{bin} layer--
are evaluated to extract its maximum value per cell of the sky grid \code{g}.
But, \code{dist_to_plant} allows users to establish a buffer zone which
modify \code{bin}.

The final step filter these local maximum values.\code{min_raster_dist} is a
minimum distance threshold between points that is applied in the raster
space.
}
\examples{
\dontrun{
caim <- read_caim() \%>\% normalize()
z <- zenith_image(ncol(caim), lens("Nikon_FCE9"))
a <- azimuth_image(z)
sky_blue <- sRGB(matrix(c(0.2, 0.3, 0.5), ncol = 3))
ecaim <- enhance_caim(caim, !is.na(z), sky_blue, gamma = 2.2)
bin <- apply_thr(ecaim, 0.75)
g <- sky_grid_segmentation(z, a, 10)
blue <- gbc(caim$Blue*255)
sky_marks <- extract_sky_marks(blue, bin, g,
                               dist_to_plant = 21,
                               min_raster_dist = 10)
cells <- cellFromRowCol(z, sky_marks$row, sky_marks$col)
hist(blue[cells][,1])
xy <- xyFromCell(z, cells)
plot(blue)
plot(vect(xy), add = TRUE, col = 2)
}
}
\concept{hps functions}
