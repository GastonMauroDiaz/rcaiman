% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ootb_mblt.R
\name{ootb_mblt}
\alias{ootb_mblt}
\title{Out-of-the-box model-based local thresholding}
\usage{
ootb_mblt(r, z, a)
}
\arguments{
\item{r}{\linkS4class{SpatRaster}. A normalized greyscale image. Typically,
the blue channel extracted from an hemispherical photograph. Please see
\code{\link{read_caim}} and \code{\link{normalize}}.}

\item{z}{\linkS4class{SpatRaster}. The result of a call to
\code{\link{zenith_image}}.}

\item{a}{\linkS4class{SpatRaster}. The result of a call to
\code{\link{azimuth_image}}.}
}
\value{
Object from class list containing the binarized image (named ‘bin’)
  and the reconstructed skies (named ‘sky_cs’ and ‘sky_s’).
}
\description{
Out-of-the-box version of the model-based local thresholding (MBLT)
algorithm.
}
\details{
This function is a hard-coded version of a MBLT pipeline that starts
producing a working binarized image and ends with a refined binarized image.
The pipeline combines these main functions \code{\link{find_sky_pixels}},
\code{\link{fit_coneshaped_model}},
\code{\link{find_sky_pixels_nonnull_criteria}}, and
\code{\link{fit_trend_surface}}. The code can be easily inspected by calling
\code{ootb_mblt} --no parenthesis. Advanced users can use that code as a
template.

The MBLT algorithm was first presented in
\insertCite{Diaz2018;textual}{rcaiman}. The version presented here differs
from that in the following main aspects:

\itemize{

\item \eqn{intercept} is set to 0, \eqn{slope} to 1, and \eqn{w} to 0.5

\item This version implements a regional thresholding approach as first step
instead of a global one. Please refer to \code{\link{find_sky_pixels}}

\item It does not use asynchronous acquisition under the open sky. So, the
cone-shaped model (\code{\link{fit_coneshaped_model}}) run without a filling
source, but the result of it is used as filling source for trend surface
fitting (\code{\link{fit_trend_surface}}).

\item  \code{\link{find_sky_pixels_nonnull_criteria}} is used to update the
first working binarized image.

}

This function searches for black objects against a light background. When
regular canopy hemispherical images are provided as input, the algorithm will
find dark canopy elements against a bright sky almost everywhere in the
picture, and the result will fit user expectations. However, if an
hemispherical photograph taken under the open sky is provided, this algorithm
would be still searching black objects against a light background, so the
darker portions of the sky will be taken as objects, i.e., canopy. As a
consequence, this will not fit users expectations, since they require the
classes ‘Gap’ and ‘No-gap’. This kind of error could be find in photographs
of open forests for the same reason.

If you use this function in your research, please cite
\insertCite{Diaz2018}{rcaiman}.
}
\examples{
\dontrun{
path <- system.file("external/DSCN4500.JPG", package = "rcaiman")
caim <- read_caim(path, c(1280, 960) - 745, 745 * 2, 745 * 2)
z <- zenith_image(ncol(caim), lens("Nikon_FCE9"))
a <- azimuth_image(z)
r <- gbc(caim$Blue)
r[is.na(z)] <- 0 #because FOV > 180
bin <- ootb_mblt(r, z, a)
plot(bin$bin)
}
}
\references{
\insertAllCited{}
}
\seealso{
Other MBLT functions: 
\code{\link{extract_rl}()},
\code{\link{extract_sky_points}()},
\code{\link{find_sky_pixels}()},
\code{\link{fit_coneshaped_model}()},
\code{\link{fit_trend_surface}()},
\code{\link{thr_image}()}
}
\concept{MBLT functions}
