% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mblt.R
\name{ootb_mblt}
\alias{ootb_mblt}
\title{Out-of-the-box model-based local thresholding}
\usage{
ootb_mblt(r, z, a, is_horizon_visible = FALSE)
}
\arguments{
\item{r}{\linkS4class{RasterLayer}. A normalized greyscale image. Typically,
the blue channel extracted from an hemispherical photographs. Please see
\code{\link{read_caim}} and \code{\link{normalize}}.}

\item{z}{\linkS4class{RasterLayer}. The result of a call to
\code{\link{zenith_image}}.}

\item{a}{\linkS4class{RasterLayer}. The result of a call to
\code{\link{azimuth_image}}.}

\item{is_horizon_visible}{Logical vector of length one. In mountainous
regions the horizon is not visible even outside the forest. In dense
forest, the horizon is hide even in non-mountainous regions. In those
situations, pixels from near the horizon are unreliable as sky pixels. When
this argument is \code{FALSE}, pixels from above 70 degrees of zenith angle
are considered unreliable as pure sky pixels.}
}
\value{
Object of class list with the binarized image (named "bin") and the
  reconstructed sky (named "sky").
}
\description{
Out-of-the-box version of the model-based local thresholding (MBLT)
algorithm.
}
\details{
This function is a hard-coded version of a MBLT pipeline that starts with a
working binarized image and ended with a refined binarized image. The
pipeline combines \code{\link{find_sky_dns}},
\code{\link{fit_cone_shaped_model}}, \code{\link{fit_trend_surface}}, and
\code{\link{thr_image}}. The code can be easily inspected by calling
\code{ootb_mblt} --no parenthesis. Advanced users could use that code as a
template.

The MBLT algorithm was first presented in
\insertCite{Diaz2018;textual}{rcaiman}. This version differs from that in the
following main aspects:

\itemize{

\item \eqn{intercept} is set to 0, \eqn{slope} to 1, and \eqn{w} to 0.5

\item This version implements a regional threholding approach as first step
instead of a global one. Please refer to \code{\link{find_sky_dns}}. The
minimum number of samples (sky DNs) required is equals to the 30 % of the
population, considering that it is made of  \eqn{5 \times 5} sky grid cells.

\item It does not use asynchronous acquisition under the open sky. So, the
cone shaped model (\code{\link{fit_cone_shaped_model}}) run without a filling
source, but the result of it is used as filling source for trend surface
fitting (\code{\link{fit_trend_surface}}).

\item The sDN obtained by trend surface fitting is merged with the sDN
obtained with \code{\link{fit_cone_shaped_model}}. To merge them, a weighted
average is calculated, being weights calculated as \eqn{\theta^2 / 90^2}
(Near the zenith, values obtained by means of trend surface fitting prevail
over the ones obtained with the cone shaped model, and the opposite occur
near the horizon).

}

This function search for black objects again a light background. When regular
canopy hemispherical image are provided as input, the algorithm will find
dark canopy elements against a bright sky almost everywhere in the picture.
If an hemispherical photograph taken under the open sky is provided, this
algorithm would be still searching black objects against a light background,
so the darker portions of the sky will be taken as objects, i.e., canopy.
This kind of error could be find in photographs of open forests for the same
reason.
}
\examples{
\dontrun{
my_file <- path.expand("~/DSCN5548.JPG")
download.file("https://osf.io/kp7rx/download", my_file,
              method = "auto", mode = "wb")
r <- read_caim(my_file,
               c(1280, 960) - 745,
               745 * 2,
               745 * 2)
z <- zenith_image(ncol(r), lens("Nikon_FCE9"))
a <- azimuth_image(z)
blue <- gbc(r$Blue)
bin <- ootb_mblt(blue, z, a, is_horizon_visible = TRUE)$bin
plot(bin)
}
}
\references{
\insertRef{Diaz2018}{rcaiman}
}
\seealso{
Other mblt functions: 
\code{\link{find_sky_dns}()},
\code{\link{fit_cone_shaped_model}()},
\code{\link{fit_trend_surface}()},
\code{\link{thr_image}()}
}
\concept{mblt functions}
